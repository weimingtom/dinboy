<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
               xmlns:s="library://ns.adobe.com/flex/spark" 
               xmlns:mx="library://ns.adobe.com/flex/mx">
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
			<fx:XMLList id="treeDataProvider">
                <fx:menuitem label="Products" isBranch="true">
                    <fx:menuitem label="Posters" isBranch="true"/>
                    <fx:menuitem label="CDs" isBranch="true">
                        <fx:menuitem label="Pavement" qq="181311496" phone="1122334455" />
                        <fx:menuitem label="Pavarotti" qq="181311496" phone="1122334455" />
                        <fx:menuitem label="Phish" qq="181311496" phone="1122334455"/>
                    </fx:menuitem>
                    <fx:menuitem label="T-shirts" isBranch="true"/>
						<fx:menuitem label="Pavement" qq="181311496" phone="1122334455" />
                        <fx:menuitem label="Pavarotti" qq="181311496" phone="1122334455" />
                        <fx:menuitem label="Phish" qq="181311496" phone="1122334455"/>
                    <fx:menuitem label="Tickets" isBranch="true"/>
                </fx:menuitem>
            </fx:XMLList>
			
			<mx:ArrayCollection id="dataProvider">
				<fx:Object label="Dinboy" qq="344829874" phone="18750209178" />
				<fx:Object label="Dinboy" qq="344829874" phone="18750209178" />
			</mx:ArrayCollection>	
	</fx:Declarations>

	<fx:Script>
		<![CDATA[
			import adobe.utils.CustomActions;
			import mx.collections.ArrayCollection;
			import mx.controls.DataGrid;
			import mx.controls.Tree;
			import mx.core.DragSource;
			import mx.core.IUIComponent;
			import mx.events.DragEvent;
			import mx.managers.DragManager;
			import spark.components.List;
			import spark.layouts.supportClasses.DropLocation;
			
			/**
			 * Set DataGrid to Drop
			 * @param	event
			 */
			private function dataDragEnterHandler(event:DragEvent):void {
					//event.preventDefault();
					if (event.dragInitiator is Tree) 
					{
						var _dragSource:DragSource = event.dragSource;
						if (!_dragSource.dataForFormat("treeItems")) 
						{
							return;
						}
						var _items:Array = _dragSource.dataForFormat("treeItems") as Array;
						var i:int ;
						for (i= 0; i < _items.length; i++) 
						{
							if (XML(_items[i]).@isBranch ==true) 
							{
								return;
							}
						}
					}
					DragManager.acceptDragDrop(IUIComponent(event.currentTarget));
			}
			
			/**
			 * 
			 * @param	event
			 */
			private function dragDropHandler(event:DragEvent):void 
			{
				var _dragTarget:DataGrid = DataGrid(event.currentTarget);
				var _localPosit:int = _dragTarget.calculateDropIndex(event);
				var _dragSourse:DragSource = event.dragSource;
				var _xml:XML ;
				var _xmllist:XMLList; ;
				var _items:Array;
				var _obj:Object={};
					if (_dragSourse.dataForFormat("items")) 
					{
						_items = _dragSourse.dataForFormat("items") as Array;
					}else if(_dragSourse.dataForFormat("treeItems"))
					{
						 _items = _dragSourse.dataForFormat("treeItems") as Array;
					}
					var i:int ,j:int ;
					for (i= 0; i < _items.length; i++) 
					{
						_xml = XML(_items[i]);
						_xmllist = _xml.@ * ;
						for (j= 0; j < _xmllist.length(); j++) 
						{
							_obj[_xmllist[j].name().toString()] = _xmllist[j];
						}
						dataProvider.addItemAt(_obj, _localPosit);
					}
				//.addItemAt(_obj, _localPosit);
				_dragTarget.hideDropFeedback(event);
				_obj = null;
				_xml = null;
				_xmllist = null;
				//_dragTarget.destroyDropIndicator();
			}
			
			/**
			 * 
			 * @param	event
			 */
			private function dragOverHandler(event:DragEvent):void 
			{
				var _dragTarget:DataGrid = DataGrid(event.currentTarget);
				DragManager.showFeedback(DragManager.COPY);
				_dragTarget.showDropFeedback(event);
				//_dragTarget.createDropIndicator();
				
				
			}
			
			/**
			 * 
			 * @param	event
			 */
			private function dragExitHandler(event:DragEvent):void 
			{
				var _dragTarget:DataGrid = DataGrid(event.currentTarget);
				_dragTarget.hideDropFeedback(event);
			}
				
			private var _a:int;
		]]>
	</fx:Script>
	
	<s:Group width="100%" height="100%">
			<mx:VDividedBox width="100%" height="100%">
				<mx:HDividedBox width="100%" height="50%" minHeight="30">
					<mx:Tree id="dragTree" dataProvider="{treeDataProvider}" labelField="@label" showRoot="true"  dragEnabled="true" height="100%" minWidth="30" minHeight="30" allowMultipleSelection="true"></mx:Tree>
					<mx:DataGrid id="dragDataGrid" width="70%" height="100%" minWidth="30" minHeight="30"  dataProvider="{dataProvider}" dragEnter="dataDragEnterHandler(event)" dragOver="dragOverHandler(event)" dragDrop="dragDropHandler(event)" dragExit="dragExitHandler(event)">
						<mx:columns>
							<mx:DataGridColumn dataField="label" headerText="name"></mx:DataGridColumn>
							<mx:DataGridColumn dataField="qq" headerText="qq"></mx:DataGridColumn>
							<mx:DataGridColumn dataField="phone" headerText="phone"></mx:DataGridColumn>
						</mx:columns>
					</mx:DataGrid>
				</mx:HDividedBox>
				<mx:DataGrid width="100%" height="50%" minHeight="30"></mx:DataGrid>
			</mx:VDividedBox>
	</s:Group>
</s:Application>